// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using th_poker_api.Data;

#nullable disable

namespace th_poker_api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230306075901_3Mar2023")]
    partial class _3Mar2023
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("th_poker_api.Model.Amount.UsersAmount", b =>
                {
                    b.Property<string>("AmountID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AdsCount")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FreeSpin")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeForAds")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("amount")
                        .HasColumnType("real");

                    b.HasKey("AmountID");

                    b.ToTable("UserAmount");
                });

            modelBuilder.Entity("th_poker_api.Model.Card.MDCards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndexCard")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MDCards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3277),
                            Desc = "Clover 2",
                            IndexCard = 0,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3278)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3279),
                            Desc = "Diamond 2",
                            IndexCard = 1,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3279)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3280),
                            Desc = "Heart 2",
                            IndexCard = 2,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3280)
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3281),
                            Desc = "Spade 2",
                            IndexCard = 3,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3282)
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3282),
                            Desc = "Clover 3",
                            IndexCard = 4,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3283)
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3283),
                            Desc = "Diamond 3",
                            IndexCard = 5,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3284)
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3284),
                            Desc = "Heart 3",
                            IndexCard = 6,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3285)
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3285),
                            Desc = "Spade 3",
                            IndexCard = 7,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3286)
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3287),
                            Desc = "Clover 4",
                            IndexCard = 8,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3287)
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3288),
                            Desc = "Diamond 4",
                            IndexCard = 9,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3289)
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3289),
                            Desc = "Heart 4",
                            IndexCard = 10,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3290)
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3291),
                            Desc = "Spade 4",
                            IndexCard = 11,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3291)
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3292),
                            Desc = "Clover 5",
                            IndexCard = 12,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3292)
                        },
                        new
                        {
                            Id = 14,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3293),
                            Desc = "Diamond 5",
                            IndexCard = 13,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3293)
                        },
                        new
                        {
                            Id = 15,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3294),
                            Desc = "Heart 5",
                            IndexCard = 14,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3294)
                        },
                        new
                        {
                            Id = 16,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3295),
                            Desc = "Spade 5",
                            IndexCard = 15,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3295)
                        },
                        new
                        {
                            Id = 17,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3296),
                            Desc = "Clover 6",
                            IndexCard = 16,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3296)
                        },
                        new
                        {
                            Id = 18,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3297),
                            Desc = "Diamond 6",
                            IndexCard = 17,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3297)
                        },
                        new
                        {
                            Id = 19,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3298),
                            Desc = "Heart 6",
                            IndexCard = 18,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3298)
                        },
                        new
                        {
                            Id = 20,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3299),
                            Desc = "Spade 6",
                            IndexCard = 19,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3300)
                        },
                        new
                        {
                            Id = 21,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3300),
                            Desc = "Clover 7",
                            IndexCard = 20,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3301)
                        },
                        new
                        {
                            Id = 22,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3301),
                            Desc = "Diamond 7",
                            IndexCard = 21,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3302)
                        },
                        new
                        {
                            Id = 23,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3302),
                            Desc = "Heart 7",
                            IndexCard = 22,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3303)
                        },
                        new
                        {
                            Id = 24,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3303),
                            Desc = "Spade 7",
                            IndexCard = 23,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3304)
                        },
                        new
                        {
                            Id = 25,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3304),
                            Desc = "Clover 8",
                            IndexCard = 24,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3305)
                        },
                        new
                        {
                            Id = 26,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3305),
                            Desc = "Diamond 8",
                            IndexCard = 25,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3306)
                        },
                        new
                        {
                            Id = 27,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3306),
                            Desc = "Heart 8",
                            IndexCard = 26,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3307)
                        },
                        new
                        {
                            Id = 28,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3308),
                            Desc = "Spade 8",
                            IndexCard = 27,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3308)
                        },
                        new
                        {
                            Id = 29,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3309),
                            Desc = "Clover 9",
                            IndexCard = 28,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3309)
                        },
                        new
                        {
                            Id = 30,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3310),
                            Desc = "Diamond 9",
                            IndexCard = 29,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3310)
                        },
                        new
                        {
                            Id = 31,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3311),
                            Desc = "Heart 9",
                            IndexCard = 30,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3311)
                        },
                        new
                        {
                            Id = 32,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3312),
                            Desc = "Spade 9",
                            IndexCard = 31,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3313)
                        },
                        new
                        {
                            Id = 33,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3313),
                            Desc = "Clover 10",
                            IndexCard = 32,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3314)
                        },
                        new
                        {
                            Id = 34,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3314),
                            Desc = "Diamond 10",
                            IndexCard = 33,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3315)
                        },
                        new
                        {
                            Id = 35,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3315),
                            Desc = "Heart 10",
                            IndexCard = 34,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3316)
                        },
                        new
                        {
                            Id = 36,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3317),
                            Desc = "Spade 10",
                            IndexCard = 35,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3317)
                        },
                        new
                        {
                            Id = 37,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3318),
                            Desc = "Clover A",
                            IndexCard = 36,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3318)
                        },
                        new
                        {
                            Id = 38,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3319),
                            Desc = "Diamond A",
                            IndexCard = 37,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3319)
                        },
                        new
                        {
                            Id = 39,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3320),
                            Desc = "Heart A",
                            IndexCard = 38,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3320)
                        },
                        new
                        {
                            Id = 40,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3321),
                            Desc = "Spade A",
                            IndexCard = 39,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3321)
                        },
                        new
                        {
                            Id = 41,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3322),
                            Desc = "Clover J",
                            IndexCard = 40,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3322)
                        },
                        new
                        {
                            Id = 42,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3323),
                            Desc = "Diamond J",
                            IndexCard = 41,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3323)
                        },
                        new
                        {
                            Id = 43,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3324),
                            Desc = "Heart J",
                            IndexCard = 42,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3324)
                        },
                        new
                        {
                            Id = 44,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3325),
                            Desc = "Spade J",
                            IndexCard = 43,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3325)
                        },
                        new
                        {
                            Id = 45,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3326),
                            Desc = "Clover Q",
                            IndexCard = 44,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3326)
                        },
                        new
                        {
                            Id = 46,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3327),
                            Desc = "Diamond Q",
                            IndexCard = 45,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3328)
                        },
                        new
                        {
                            Id = 47,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3328),
                            Desc = "Heart Q",
                            IndexCard = 46,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3329)
                        },
                        new
                        {
                            Id = 48,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3329),
                            Desc = "Spade Q",
                            IndexCard = 47,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3330)
                        },
                        new
                        {
                            Id = 49,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3330),
                            Desc = "Clover K",
                            IndexCard = 48,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3331)
                        },
                        new
                        {
                            Id = 50,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3332),
                            Desc = "Diamond K",
                            IndexCard = 49,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3332)
                        },
                        new
                        {
                            Id = 51,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3333),
                            Desc = "Heart K",
                            IndexCard = 50,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3333)
                        },
                        new
                        {
                            Id = 52,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3334),
                            Desc = "Spade K",
                            IndexCard = 51,
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3334)
                        });
                });

            modelBuilder.Entity("th_poker_api.Model.Friend.MDFriends", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FriendId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("userCreateID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MDFriends");
                });

            modelBuilder.Entity("th_poker_api.Model.Friend.MDFriendship", b =>
                {
                    b.Property<string>("RequesterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddresseeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("RequesterId", "AddresseeId");

                    b.HasIndex("AddresseeId");

                    b.ToTable("MDFriendship", (string)null);
                });

            modelBuilder.Entity("th_poker_api.Model.Game.GameplayDetail", b =>
                {
                    b.Property<string>("GameplayDetailID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float?>("Balance")
                        .HasColumnType("real");

                    b.Property<int?>("Card1")
                        .HasColumnType("int");

                    b.Property<int?>("Card2")
                        .HasColumnType("int");

                    b.Property<int?>("Card3")
                        .HasColumnType("int");

                    b.Property<int?>("Card4")
                        .HasColumnType("int");

                    b.Property<int?>("Card5")
                        .HasColumnType("int");

                    b.Property<int?>("CardUser1")
                        .HasColumnType("int");

                    b.Property<int?>("CardUser2")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GMHeaderIdGameplayHeaderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDTSRooms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUserUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float?>("PrevBal")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WinTypeIdIdWinType")
                        .HasColumnType("int");

                    b.HasKey("GameplayDetailID");

                    b.HasIndex("GMHeaderIdGameplayHeaderID");

                    b.HasIndex("IdUserUserId");

                    b.HasIndex("WinTypeIdIdWinType");

                    b.ToTable("GameplayDetail");
                });

            modelBuilder.Entity("th_poker_api.Model.Game.GameplayHeader", b =>
                {
                    b.Property<string>("GameplayHeaderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Card1")
                        .HasColumnType("int");

                    b.Property<int>("Card2")
                        .HasColumnType("int");

                    b.Property<int>("Card3")
                        .HasColumnType("int");

                    b.Property<int>("Card4")
                        .HasColumnType("int");

                    b.Property<int>("Card5")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdTSRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("GameplayHeaderID");

                    b.ToTable("GameplayHeader");
                });

            modelBuilder.Entity("th_poker_api.Model.Game.MDGames", b =>
                {
                    b.Property<string>("IdMDGames")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("BuyInMax")
                        .HasColumnType("real");

                    b.Property<float>("BuyInMin")
                        .HasColumnType("real");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("StakesMax")
                        .HasColumnType("real");

                    b.Property<float>("StakesMin")
                        .HasColumnType("real");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("IdMDGames");

                    b.ToTable("MDGames");

                    b.HasData(
                        new
                        {
                            IdMDGames = "ac660c4d-ecdb-4e9b-a1eb-7720eea21461",
                            BuyInMax = 10000f,
                            BuyInMin = 2000f,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3241),
                            GameDesc = "Casino \n Singapore",
                            GameTitle = "Marina Bay sands",
                            StakesMax = 1000f,
                            StakesMin = 500f,
                            UpdatedBy = "System",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3240),
                            isActive = true
                        },
                        new
                        {
                            IdMDGames = "b463af03-9a95-4a46-855e-b1f1e07a0b8b",
                            BuyInMax = 20000f,
                            BuyInMin = 5000f,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3265),
                            GameDesc = "Casino \n Lisboa",
                            GameTitle = "",
                            StakesMax = 1500f,
                            StakesMin = 800f,
                            UpdatedBy = "System",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3265),
                            isActive = true
                        },
                        new
                        {
                            IdMDGames = "ae1cb439-3328-40c3-812d-9bd684e8881b",
                            BuyInMax = 30000f,
                            BuyInMin = 10000f,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3269),
                            GameDesc = "Las Vegas \n Nevada",
                            GameTitle = "",
                            StakesMax = 3000f,
                            StakesMin = 1500f,
                            UpdatedBy = "System",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3268),
                            isActive = true
                        });
                });

            modelBuilder.Entity("th_poker_api.Model.Game.MDGameTypes", b =>
                {
                    b.Property<string>("IdMDGameType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDGamesIdMDGames")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("IdMDGameType");

                    b.HasIndex("MDGamesIdMDGames");

                    b.ToTable("MDGameType");

                    b.HasData(
                        new
                        {
                            IdMDGameType = "1",
                            GameDesc = "Poker",
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3191),
                            isActive = false
                        });
                });

            modelBuilder.Entity("th_poker_api.Model.Game.TableBet", b =>
                {
                    b.Property<string>("idTableBet")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("amt")
                        .HasColumnType("real");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("idTSRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTableBet");

                    b.ToTable("tableBets");
                });

            modelBuilder.Entity("th_poker_api.Model.Game.WinType", b =>
                {
                    b.Property<int>("IdWinType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWinType"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("IdWinType");

                    b.ToTable("WinType");

                    b.HasData(
                        new
                        {
                            IdWinType = 1,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3075),
                            Desc = "High Card"
                        },
                        new
                        {
                            IdWinType = 2,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3084),
                            Desc = "Pair"
                        },
                        new
                        {
                            IdWinType = 3,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3085),
                            Desc = "Two pair"
                        },
                        new
                        {
                            IdWinType = 4,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3086),
                            Desc = "Three of a kind"
                        },
                        new
                        {
                            IdWinType = 5,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3087),
                            Desc = "Straight"
                        },
                        new
                        {
                            IdWinType = 6,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3087),
                            Desc = "Flush"
                        },
                        new
                        {
                            IdWinType = 7,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3088),
                            Desc = "Full House"
                        },
                        new
                        {
                            IdWinType = 8,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3088),
                            Desc = "Four of a Kind"
                        },
                        new
                        {
                            IdWinType = 9,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3089),
                            Desc = "Straight Flush"
                        },
                        new
                        {
                            IdWinType = 10,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3090),
                            Desc = "Royal Flush"
                        });
                });

            modelBuilder.Entity("th_poker_api.Model.Player.MDRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MDRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3158),
                            Desc = "Player",
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3159)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3160),
                            Desc = "Admin",
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3161)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3162),
                            Desc = "User",
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3162)
                        });
                });

            modelBuilder.Entity("th_poker_api.Model.Player.MDStatuses", b =>
                {
                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatus"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("IdStatus");

                    b.ToTable("MDStatuses");

                    b.HasData(
                        new
                        {
                            IdStatus = 1,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3173),
                            Desc = "Active",
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3173)
                        },
                        new
                        {
                            IdStatus = 2,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3174),
                            Desc = "Banned",
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3175)
                        },
                        new
                        {
                            IdStatus = 3,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3176),
                            Desc = "PAID",
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3176)
                        },
                        new
                        {
                            IdStatus = 4,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3177),
                            Desc = "UNPAID",
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3177)
                        },
                        new
                        {
                            IdStatus = 5,
                            CreatedBy = "SYSTEM",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3178),
                            Desc = "HOLD",
                            UpdatedBy = "SYSTEM",
                            UpdatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3178)
                        });
                });

            modelBuilder.Entity("th_poker_api.Model.Player.MDUsers", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("LoggedIn")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ReferalJoin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profilePicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("MDUsers");
                });

            modelBuilder.Entity("th_poker_api.Model.Player.UsersLogin", b =>
                {
                    b.Property<string>("IdUsersLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Device")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUserUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsersLogin");

                    b.HasIndex("IdUserUserId");

                    b.ToTable("UsersLogin");
                });

            modelBuilder.Entity("th_poker_api.Model.Player.UsersProfile", b =>
                {
                    b.Property<string>("IDProfile")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUserUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("Profile")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("extension")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDProfile");

                    b.HasIndex("IdUserUserId");

                    b.ToTable("UsersProfile");
                });

            modelBuilder.Entity("th_poker_api.Model.Player.UsersReferal", b =>
                {
                    b.Property<string>("ReferalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsersIdUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ReferalId");

                    b.HasIndex("UsersIdUserId");

                    b.ToTable("UsersReferal");
                });

            modelBuilder.Entity("th_poker_api.Model.Player.UsersToken", b =>
                {
                    b.Property<string>("UserTokenID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdTokenFacebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdTokenGoogle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUserUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TokenCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("UserTokenID");

                    b.HasIndex("IdUserUserId");

                    b.ToTable("UsersToken");
                });

            modelBuilder.Entity("th_poker_api.Model.Purchase.MDPaymentItem", b =>
                {
                    b.Property<string>("IdPymItem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("IdPymItem");

                    b.ToTable("MDPaymentItem");

                    b.HasData(
                        new
                        {
                            IdPymItem = "0b3605c3-80fc-4410-92b1-669bcf41d1e9",
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3360),
                            Desc = "Bronze",
                            Price = 50f,
                            Value = 10f
                        },
                        new
                        {
                            IdPymItem = "0f2b4216-eb7f-456a-8839-de9e62427d56",
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3363),
                            Desc = "Silver",
                            Price = 100f,
                            Value = 20f
                        },
                        new
                        {
                            IdPymItem = "499834a8-a42e-4970-ae08-995c6ee1cff4",
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3366),
                            Desc = "Gold",
                            Price = 150f,
                            Value = 30f
                        },
                        new
                        {
                            IdPymItem = "a398ae24-a61a-4465-912b-0c8757b32958",
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3368),
                            Desc = "Diamond",
                            Price = 200f,
                            Value = 40f
                        },
                        new
                        {
                            IdPymItem = "a1c74d01-b9c3-4b11-a235-a371268e424a",
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3370),
                            Desc = "Platinum",
                            Price = 250f,
                            Value = 50f
                        },
                        new
                        {
                            IdPymItem = "d683af6f-46af-4ff4-af4f-bee062cd692e",
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3372),
                            Desc = "Legend",
                            Price = 300f,
                            Value = 60f
                        },
                        new
                        {
                            IdPymItem = "1def6a4a-51e1-4ec8-9707-acdc6b4ad4aa",
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2023, 3, 6, 14, 59, 1, 783, DateTimeKind.Local).AddTicks(3374),
                            Desc = "Mythic",
                            Price = 500f,
                            Value = 100f
                        });
                });

            modelBuilder.Entity("th_poker_api.Model.Room.MDRoomList", b =>
                {
                    b.Property<string>("IdTSRoom")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdStatus")
                        .HasColumnType("int");

                    b.Property<string>("MDGamesIDIdMDGames")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaxPlayer")
                        .HasColumnType("int");

                    b.Property<string>("RoomCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RoomType")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("IdTSRoom");

                    b.HasIndex("MDGamesIDIdMDGames");

                    b.ToTable("MDRoomList");
                });

            modelBuilder.Entity("th_poker_api.Model.Transactions.TSPurchase", b =>
                {
                    b.Property<string>("IdPurchase")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<float>("Amount_a")
                        .HasColumnType("real");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdPymItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdStatus")
                        .HasColumnType("int");

                    b.Property<string>("IdUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPurchase");

                    b.ToTable("TSPurchases");
                });

            modelBuilder.Entity("th_poker_api.Model.WebDashboard.Misc.Statuses", b =>
                {
                    b.Property<string>("IDStatus")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("IDStatus");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("th_poker_api.Model.WebDashboard.Purchase.PaymentHistory", b =>
                {
                    b.Property<string>("IDPayment")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDPaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDPurchaseItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("IDPayment");

                    b.ToTable("PaymentHistory");
                });

            modelBuilder.Entity("th_poker_api.Model.WebDashboard.Purchase.PaymentMethod", b =>
                {
                    b.Property<string>("IDPaymentMethod")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("IDPaymentMethod");

                    b.ToTable("paymentMethods");
                });

            modelBuilder.Entity("th_poker_api.Model.WebDashboard.User.RolesDashboard", b =>
                {
                    b.Property<string>("RoleID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleID");

                    b.ToTable("RolesDashboard");
                });

            modelBuilder.Entity("th_poker_api.Model.WebDashboard.User.UserLoginDashboard", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("UserLoginDashboard");
                });

            modelBuilder.Entity("th_poker_api.Model.Friend.MDFriends", b =>
                {
                    b.HasOne("th_poker_api.Model.Player.MDUsers", "userId")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userId");
                });

            modelBuilder.Entity("th_poker_api.Model.Friend.MDFriendship", b =>
                {
                    b.HasOne("th_poker_api.Model.Player.MDUsers", "Addressee")
                        .WithMany("FriendshipAddressee")
                        .HasForeignKey("AddresseeId")
                        .IsRequired()
                        .HasConstraintName("FriendshipToAddressee_FK");

                    b.HasOne("th_poker_api.Model.Player.MDUsers", "Requester")
                        .WithMany("FriendshipRequester")
                        .HasForeignKey("RequesterId")
                        .IsRequired()
                        .HasConstraintName("FriendshipToRequester_FK");

                    b.Navigation("Addressee");

                    b.Navigation("Requester");
                });

            modelBuilder.Entity("th_poker_api.Model.Game.GameplayDetail", b =>
                {
                    b.HasOne("th_poker_api.Model.Game.GameplayHeader", "GMHeaderId")
                        .WithMany("gameplayDetails")
                        .HasForeignKey("GMHeaderIdGameplayHeaderID");

                    b.HasOne("th_poker_api.Model.Player.MDUsers", "IdUser")
                        .WithMany("GameplayDetails")
                        .HasForeignKey("IdUserUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("th_poker_api.Model.Game.WinType", "WinTypeId")
                        .WithMany()
                        .HasForeignKey("WinTypeIdIdWinType");

                    b.Navigation("GMHeaderId");

                    b.Navigation("IdUser");

                    b.Navigation("WinTypeId");
                });

            modelBuilder.Entity("th_poker_api.Model.Game.MDGameTypes", b =>
                {
                    b.HasOne("th_poker_api.Model.Game.MDGames", "MDGames")
                        .WithMany("MDGameTypes")
                        .HasForeignKey("MDGamesIdMDGames");

                    b.Navigation("MDGames");
                });

            modelBuilder.Entity("th_poker_api.Model.Player.UsersLogin", b =>
                {
                    b.HasOne("th_poker_api.Model.Player.MDUsers", "IdUser")
                        .WithMany("UsersLogins")
                        .HasForeignKey("IdUserUserId");

                    b.Navigation("IdUser");
                });

            modelBuilder.Entity("th_poker_api.Model.Player.UsersProfile", b =>
                {
                    b.HasOne("th_poker_api.Model.Player.MDUsers", "IdUser")
                        .WithMany("usersProfiles")
                        .HasForeignKey("IdUserUserId");

                    b.Navigation("IdUser");
                });

            modelBuilder.Entity("th_poker_api.Model.Player.UsersReferal", b =>
                {
                    b.HasOne("th_poker_api.Model.Player.MDUsers", "UsersId")
                        .WithMany("UsersReferals")
                        .HasForeignKey("UsersIdUserId");

                    b.Navigation("UsersId");
                });

            modelBuilder.Entity("th_poker_api.Model.Player.UsersToken", b =>
                {
                    b.HasOne("th_poker_api.Model.Player.MDUsers", "IdUser")
                        .WithMany("UserTokens")
                        .HasForeignKey("IdUserUserId");

                    b.Navigation("IdUser");
                });

            modelBuilder.Entity("th_poker_api.Model.Room.MDRoomList", b =>
                {
                    b.HasOne("th_poker_api.Model.Game.MDGames", "MDGamesID")
                        .WithMany("MDRoomList")
                        .HasForeignKey("MDGamesIDIdMDGames");

                    b.Navigation("MDGamesID");
                });

            modelBuilder.Entity("th_poker_api.Model.Game.GameplayHeader", b =>
                {
                    b.Navigation("gameplayDetails");
                });

            modelBuilder.Entity("th_poker_api.Model.Game.MDGames", b =>
                {
                    b.Navigation("MDGameTypes");

                    b.Navigation("MDRoomList");
                });

            modelBuilder.Entity("th_poker_api.Model.Player.MDUsers", b =>
                {
                    b.Navigation("FriendshipAddressee");

                    b.Navigation("FriendshipRequester");

                    b.Navigation("GameplayDetails");

                    b.Navigation("UserTokens");

                    b.Navigation("UsersLogins");

                    b.Navigation("UsersReferals");

                    b.Navigation("usersProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
